from fastapi import FastAPI
from pybit.unified_trading import HTTP as BybitHTTP
from contextlib import asynccontextmanager
import traceback

# ==== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π ====
BYBIT_API_KEY = "yQ6vPLh9DcWvDgbRlz"
BYBIT_API_SECRET = "7T2mItvuA4fmvCvOzQCuQHixxllAsBikr55B "
USE_TESTNET = True  # üëâ –ò–∑–º–µ–Ω–∏ –Ω–∞ False, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ Mainnet

# ==== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Bybit ====
session = BybitHTTP(
    testnet=USE_TESTNET,
    api_key=BYBIT_API_KEY,
    api_secret=BYBIT_API_SECRET
)

# ==== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ====
def test_bybit_connection():
    print(f"üîå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Bybit —Å testnet={USE_TESTNET}")
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Bybit...")

    account_types = ["UNIFIED", "SPOT", "CONTRACT"]

    for acc_type in account_types:
        try:
            print(f"\nüì¶ –ü—Ä–æ–±—É–µ–º accountType = {acc_type}")
            res = session.get_wallet_balance(accountType=acc_type)
            balances = res.get("result", {}).get("list", [])
            if balances:
                print(f"‚úÖ –£–°–ü–ï–®–ù–û: –ë–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–µ–Ω –¥–ª—è {acc_type}")
                for b in balances:
                    print(f" - {b['coin']}: {b['walletBalance']}")
            else:
                print(f"‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è {acc_type}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ accountType = {acc_type}")
            print(traceback.format_exc())

# ==== Lifespan –≤–º–µ—Å—Ç–æ on_event ====
@asynccontextmanager
async def lifespan(app: FastAPI):
    test_bybit_connection()
    yield
    print("üõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")

# ==== FastAPI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ====
app = FastAPI(title="Bybit Diagnostic App", lifespan=lifespan)


